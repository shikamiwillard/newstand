name: Newstand CI/CD workflow

on : [push]

jobs:
  run-unit-and-widget-tests:
    name: Run unit and widget tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.14.6'
          channel: 'beta'
      - name: Run setup flutter and run tests
        run: |            
            flutter pub get            
            flutter analyze
            flutter test --coverage
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: coverage/lcov.info
      # - name: Run retrieve coverage information    
      #   run: |
      #     sudo apt-get -qq update
      #     sudo apt-get install -qqy lcov
      #     pip install --upgrade pip
      #     pip install -Uqqq lxml && pip install -Uqqq beautifulsoup4
      #     genhtml -q -o coverage coverage/lcov.info  
      #     python check_coverage.py


  # run-driver-tests:
  #   name: Run driver tests
  #   runs-on: macos-latest
  #   needs: run-unit-and-widget-tests
  #   if: github.event_name == 'push' && github.ref == 'refs/tags/^nightly-.*'
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-package: jre
  #         java-version: '8.0.242'
  #     - uses: actions/setup-python@v1
  #       with:
  #         python-version: '3.8'
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'beta'
  #         flutter-version: '1.14.6'
  #     - name: Run setup flutter and run tests
  #       run: |
  #           flutter upgrade && flutter config --no-analytics
  #           flutter --version 
  #           flutter config --enable-web
  #           flutter pub get            
  #           flutter analyze
  #           sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
  #           sudo xcodebuild -runFirstLaunch
  #           phone=$(xcrun simctl create flutter-drive-test com.apple.CoreSimulator.SimDeviceType.iPhone-XS-Max com.apple.CoreSimulator.SimRuntime.iOS-13-3)
  #           xcrun simctl boot $phone
  #           sleep 2m
  #           flutter devices
  #           sleep 10s
  #           flutter drive --target=test_driver/app.dart 
  #           xcrun simctl shutdown $phone